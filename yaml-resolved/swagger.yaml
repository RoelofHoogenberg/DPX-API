openapi: 3.0.0
info:
  title: DealPoint Public API
  description: Public API allowing access to DealPoint.
  contact:
    name: Roelof Hoogenberg
    email: Roelof@bxfin.com
  version: 0.1.0
servers:
- url: https://api.bxfin.com/api/v0.1
  description: Optional server description, e.g. Main (production) server
- url: https://staging-api.example.com/api/v0.1
  description: Optional server description, e.g. Internal staging server for testing
security:
- BasicAuth: []
- ApiKeyAuth: []
paths:
  /relationship:
    get:
      tags:
      - Relationship
      summary: Retrieve all relationships the actor is allowed to view in DealPoint
      operationId: getRelationships
      parameters:
      - name: relationshipId
        in: query
        description: relationship identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: outerCustomerId
        in: query
        description: Customer id as externally known
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: relationshipName
        in: query
        description: (part of the) name of the relationship (client)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: 'Status of the relationship [todo: conver to enum]'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: sorting order of the result set
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: outerRelationshipId
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Overview of relationships the actor is allowed to view
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relationshipList'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
      - Relationship
      summary: Adds a new relationship to DealPoint.
      operationId: createRelationship
      parameters:
      - name: recalculate
        in: query
        description: Recalculate the risk and profitability.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/relationship'
        required: true
      responses:
        "201":
          description: relationship id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /relationship/{id}:
    get:
      tags:
      - Relationship
      summary: Retrieve a specific relationship the actor is allowed to view from
        DealPoint.
      operationId: getRelationship
      parameters:
      - name: id
        in: path
        description: relationship identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: relationship details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relationshipDetails'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: relationship-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      tags:
      - Relationship
      summary: Deletes the relationship from the system.
      operationId: deleteRelationship
      parameters:
      - name: id
        in: path
        description: relationship identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No content
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: Relationship-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      tags:
      - Relationship
      summary: Updates the relationship with new values.
      operationId: updateRelationship
      parameters:
      - name: id
        in: path
        description: relationship identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recalculate
        in: query
        description: Recalculate the risk and profitability.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/relationship'
        required: true
      responses:
        "204":
          description: relationship id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: Relationship-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /relationship/{id}/profitability:
    get:
      tags:
      - Relationship
      summary: Retrieves Relationship profitability. If required, (Re)Calculate Relationship
        profitability
      operationId: getRelationshipProfitability
      parameters:
      - name: id
        in: path
        description: relationship identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recalculate
        in: query
        description: Recalculate the risk and profitability.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: relationship details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relationshipProfitability'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: relationship-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /deal:
    get:
      tags:
      - Deal
      summary: Retrieve all deals the actor is allowed to view in DealPoint
      operationId: getDeals
      parameters:
      - name: relationshipId
        in: query
        description: relationship identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: outerCustomerId
        in: query
        description: Client relationship identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: customerName
        in: query
        description: (part of the) name of the relationship
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: 'Status of the deal [todo: conver to enum]'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: sorting order of the result set
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: outerDealId
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Overview of deals the actor is allowed to view
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dealList'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
      - Deal
      summary: Adds a new  Deal to the relationship in  DealPoint. A Deal consist
        of the deal, one or more products and the relationship.
      operationId: createDeal
      parameters:
      - name: recalculate
        in: query
        description: Recalculate the risk and profitability.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deal'
        required: true
      responses:
        "201":
          description: Deal id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /deal/{id}:
    get:
      tags:
      - Deal
      summary: Retrieve a specific deal the actor is allowed to view from DealPoint.
        A Deal consist of one or more products, a deal-team and the relationship.
      operationId: getDeal
      parameters:
      - name: id
        in: path
        description: Deal identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Deal details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dealDetails'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: dealId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      tags:
      - Deal
      summary: Deletes the deal from the system.
      operationId: deleteDeal
      parameters:
      - name: id
        in: path
        description: deal identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No content
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: dealId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      tags:
      - Deal
      summary: Updates the deal with new values.
      operationId: updateDeal
      parameters:
      - name: id
        in: path
        description: Deal identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recalculate
        in: query
        description: Recalculate the risk and profitability.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deal'
        required: true
      responses:
        "204":
          description: Deal id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: dealId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /deal/{id}/profitability:
    get:
      tags:
      - Deal
      summary: Retrieves Deal profitability. If required, (Re)Calculate Deal profitability
      operationId: getDealProfitability
      parameters:
      - name: id
        in: path
        description: deal identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recalculate
        in: query
        description: Recalculate the risk and profitability.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Deal profitability and regulatory capital requirements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dealProfitability'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: dealId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /deal/{id}/workflow:
    get:
      tags:
      - Deal
      summary: Overview of deal states and dealState workflow (deal creation, Draft,
        etc.)
      operationId: getDealWorkflow
      parameters:
      - name: id
        in: path
        description: deal identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Deal approval workflow (overview and current status)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dealWorkflow'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: dealId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /deal/{id}/approval/workflow:
    get:
      tags:
      - Deal
      summary: 'Overview of Approval levels (AWF), their states, the approver groups
        per level. Fore each approver group the selected approvers and their approve
        state is returnd. '
      operationId: getApprovalWorkflow
      parameters:
      - name: id
        in: path
        description: deal identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Deal approval workflow (overview and current status)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/approvalDetails'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: dealId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
      - Deal
      summary: Approval setup per level and approval groups a list of approvers
      operationId: approvalSetup
      parameters:
      - name: id
        in: path
        description: deal identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approvalSetup'
        required: true
      responses:
        "201":
          description: Deal id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /deal/{dealId}/approval/approvalgroup/{approvalGroupId}/approvers:
    get:
      tags:
      - Deal
      summary: 'list of potential approvers for the deal and approval-group at hand. '
      operationId: getApproversList
      parameters:
      - name: dealId
        in: path
        description: deal identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: approvalGroupId
        in: path
        description: approval group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Deal approval workflow (overview and current status)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/approversList'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: dealId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /deal/{id}/action:
    post:
      tags:
      - Deal
      summary: Performs action to set dealState to new value. Activated by DRAFT,
        NPW, etc. buttons
      operationId: postDealAction
      parameters:
      - name: id
        in: path
        description: deal identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dealAction'
        required: true
      responses:
        "201":
          description: Deal id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /deal/{id}/approval/action:
    post:
      tags:
      - Deal
      summary: Performs action to set levelApprovalState to new value. Only used for
        power users.
      operationId: postApprovalAction
      parameters:
      - name: id
        in: path
        description: deal identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approvalLevelAction'
        required: true
      responses:
        "201":
          description: Deal id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /scenario:
    get:
      tags:
      - Scenario
      summary: Retrieve all Scenarios the actor is allowed to view in DealPoint
      operationId: getScenarios
      parameters:
      - name: dealId
        in: query
        description: deal identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: relationshipName
        in: query
        description: (part of the) name of the relationship
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: 'Status of the scenario [todo: conver to enum]'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: sorting order of the result set
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: outerDealId
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Overview of scenarios the actor is allowed to view
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scenarioList'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
      - Scenario
      summary: 'Adds a new Scenario to the deal in DealPoint. '
      operationId: createScenario
      parameters:
      - name: recalculate
        in: query
        description: Recalculate the risk and profitability.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scenario'
        required: true
      responses:
        "201":
          description: Deal id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /scenario/{id}:
    get:
      tags:
      - Scenario
      summary: Retrieve a specific scenario the actor is allowed to view from DealPoint.
      operationId: getScenario
      parameters:
      - name: id
        in: path
        description: Scenario identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Scenario details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scenarioDetails'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: Scenario-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      tags:
      - Scenario
      summary: Deletes the Scenario from the system.
      operationId: deleteScenario
      parameters:
      - name: id
        in: path
        description: Scenario identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No content
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: Scenario-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      tags:
      - Scenario
      summary: Updates the Scenario with new values.
      operationId: updateScenario
      parameters:
      - name: id
        in: path
        description: Scenario identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recalculate
        in: query
        description: Recalculate the risk and profitability.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scenario'
        required: true
      responses:
        "204":
          description: Scenario id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: dealId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /scenario/{id}/profitability:
    get:
      tags:
      - Scenario
      summary: Retrieves Scenario profitability. If required, (Re)Calculate Scenario
        profitability
      operationId: getScenarioProfitability
      parameters:
      - name: id
        in: path
        description: scenario identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recalculate
        in: query
        description: Recalculate the risk and profitability.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Scenario profitability and regulatory capital requirements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scenarioProfitability'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: scenario-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /counterparty:
    get:
      tags:
      - counterparty
      summary: Retrieve all counterparties the actor is allowed to view in DealPoint
      operationId: getCounterparties
      parameters:
      - name: scenarioId
        in: query
        description: Scenario identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dealId
        in: query
        description: Deal identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: counterpartyId
        in: query
        description: relationship identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: outerCustomerId
        in: query
        description: Customer id as externally known
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: counterpartyName
        in: query
        description: (part of the) name of the counterparty (client)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: 'Status of the counterparty [todo: conver to enum]'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: sorting order of the result set
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: outerRelationshipId
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Overview of counterparties the actor is allowed to view
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/counterpartyList'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
      - counterparty
      summary: 'Adds a new counterparty to DealPoint. '
      operationId: createcounterparty
      parameters:
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/counterparty'
        required: true
      responses:
        "201":
          description: counterparty id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /counterparty/{id}:
    get:
      tags:
      - counterparty
      summary: Retrieve a specific counterparty the actor is allowed to view from
        DealPoint.
      operationId: getcounterparty
      parameters:
      - name: id
        in: path
        description: counterparty identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: counterparty details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/counterpartyDetails'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: counterparty-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      tags:
      - counterparty
      summary: Deletes the relationship from the system.
      operationId: deletecounterparty
      parameters:
      - name: id
        in: path
        description: counterparty identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No content
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: counterparty-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      tags:
      - counterparty
      summary: Updates the relationship with new values.
      operationId: updatecounterparty
      parameters:
      - name: id
        in: path
        description: counterparty identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/counterparty'
        required: true
      responses:
        "204":
          description: relationship id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: counterparty-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /counterparty/{id}/profitability:
    get:
      tags:
      - counterparty
      summary: Retrieves counterparty profitability. If required, (Re)Calculate counterparty
        profitability
      operationId: getcounterpartyProfitability
      parameters:
      - name: id
        in: path
        description: counterparty identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recalculate
        in: query
        description: Recalculate the risk and profitability.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Scenario profitability and regulatory capital requirements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/counterpartyProfitability'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: counterparty-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /product:
    get:
      tags:
      - Product
      summary: Retrieve all products the actor is allowed to view in DealPoint
      operationId: getProducts
      parameters:
      - name: scenarioId
        in: query
        description: Scenario identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: dealId
        in: query
        description: Deal identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: counterpartyId
        in: query
        description: relationship identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: outerCustomerId
        in: query
        description: Customer id as externally known
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: counterpartyName
        in: query
        description: (part of the) name of the counterparty (client)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: 'Status of the product [todo: conver to enum]'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: sorting order of the result set
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: outerRelationshipId
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Overview of products the actor is allowed to view
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productList'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
      - Product
      summary: 'Adds a new product to DealPoint. '
      operationId: createProduct
      parameters:
      - name: recalculate
        in: query
        description: Recalculate the risk and profitability.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
        required: true
      responses:
        "201":
          description: product id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /product/{id}:
    get:
      tags:
      - Product
      summary: Retrieve a specific product the actor is allowed to view from DealPoint.
      operationId: getProduct
      parameters:
      - name: id
        in: path
        description: product identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productDetails'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: product-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      tags:
      - Product
      summary: Deletes the product from the system.
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        description: product identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No content
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: product-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      tags:
      - Product
      summary: Updates the relationship with new values.
      operationId: updateproduct
      parameters:
      - name: id
        in: path
        description: product identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recalculate
        in: query
        description: Recalculate the risk and profitability.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
        required: true
      responses:
        "204":
          description: product id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: product-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /product/{id}/profitability:
    get:
      tags:
      - Product
      summary: Retrieves Product profitability. If required, (Re)Calculate Product
        profitability
      operationId: getProductProfitability
      parameters:
      - name: id
        in: path
        description: product identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recalculate
        in: query
        description: Recalculate the risk and profitability.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Scenario profitability and regulatory capital requirements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productProfitability'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: product-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /usercontext:
    get:
      tags:
      - User
      summary: Based on userName, email, phoneNumber or external context id,  the
        UserId is retrieved from DealPoint (exact match search)
      operationId: getUserContext
      parameters:
      - name: userName
        in: query
        description: (part of the) name of the user
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        description: email the user
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: phoneNumber
        in: query
        description: phoneNumber of the user
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userContext'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "404":
          description: User not found
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user:
    get:
      tags:
      - User
      summary: Retrieve all users the actor is allowed to view in DealPoint
      operationId: getUsers
      parameters:
      - name: userName
        in: query
        description: (part of the) name of the user
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        description: email the user
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: phoneNumber
        in: query
        description: phoneNumber of the user
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: 'Status of the user [todo: conver to enum]'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: sorting order of the result set
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: userName
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Overview of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userList'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
      - User
      summary: 'Adds a new user to DealPoint. '
      operationId: createUser
      parameters:
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      responses:
        "201":
          description: user id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: User-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/{id}:
    get:
      tags:
      - User
      summary: Retrieve a specific user from DealPoint.
      operationId: getUser
      parameters:
      - name: id
        in: path
        description: user identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights'
        "404":
          description: user-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      tags:
      - User
      summary: Deletes the user from the system.
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        description: user identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No content
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: User-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      tags:
      - User
      summary: Updates the user with new values.
      operationId: updateUser
      parameters:
      - name: id
        in: path
        description: user identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      responses:
        "204":
          description: user id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: User-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/{id}/approval:
    get:
      tags:
      - User
      summary: list of [open] deal approvals requests, filter on state is possible
      operationId: getUserApprovalList
      parameters:
      - name: id
        in: path
        description: user identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: status
        in: query
        description: 'Status of the approval [todo: conver to enum]'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: sorting order of the result set
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: date submitted
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Overview of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userApprovalList'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
      - User
      summary: 'Performs user action to set UserApprovalState to new state like approved,
        supported, or declined. '
      operationId: postUserApproval
      parameters:
      - name: id
        in: path
        description: user identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-system-caller
        in: header
        description: Identification of the calling application.
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: x-dpx-actor-id
        in: header
        description: Identification of the end-user (DPX internal id).
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approvalUserAction'
        required: true
      responses:
        "201":
          description: user id (key)
          headers:
            entityId:
              $ref: '#/components/schemas/entityId'
        "400":
          description: Invalid input value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "401":
          description: |-
            Unauthorized, expect this for the following types of errors
            - BadAuthTicket
            - ExpiredAuthTicket
            - InsufficientAuthTicket
            - InvalidAuthTicket
            - InvalidUserAuth
            - RequestIsNotAuthenticated
            - TamperedAuthTicket
            - UnauthorizedAccess
            - UnManagedInvalidSecurityPrincipal
        "403":
          description: |-
            Forbidden, expect this for the following types of errors
            - AccessDenied
            - AttributePermissionReadIsMissing
            - AttributePermissionUpdateIsMissingDuringUpdate
            - AttributePrivilegeCreateIsMissing
            - InvalidAccessRights
        "404":
          description: User-id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
components:
  schemas:
    code:
      type: string
      description: Code of the item
      example: CodeX
    entityId:
      type: string
      description: fully qualified id of created entity
      example: '[Organization URI]/api/deal/v1.0/7eb682f1-ca75-e511-80d4-00155d2a68d1'
    id:
      type: string
      description: Unique Id Generated by DPX
      example: 95b608ef-e1e8-e811-8111-001dd8b80c9b
    outerDealId:
      type: string
      description: Unique Bank Id for Deal, typically mapped to relationship's system
        OpportunityId (for integration)
      example: 95b608ef-e1e8-e811-8111-001dd8b80c9b
    outerScenarioId:
      type: string
      description: Unique Bank Id for Deal, typically mapped to scenarioId (for integration)
      example: 95b608ef-e1e8-e811-8111-001dd8b80c9b
    outerCustomerId:
      type: string
      description: Unique Bank Id for Relationship (for integration)
      example: relationshipABC
    outerProductId:
      type: string
      description: Unique Bank Id for borrowing entity (for integration)
      example: relationshipABC
    clientTypeCode:
      type: string
      description: Type of relationship (Code)
      example: WSL
    bookingStateLocationCode:
      type: string
      description: State where Relationship is based (code)
      example: LDN
    currencyCode:
      type: string
      description: Currency Code
      example: EUR
    exposure:
      type: number
      description: exposure of the Enity
      example: 1234533.22
    name:
      type: string
      description: name of entity
      example: Readable name
    description:
      type: string
      description: description of entity
      example: '....'
    comment:
      type: string
      description: comments added to appoval request, notes or approval.
      example: '....'
    LGDCode:
      type: string
      description: Loss Given Default (Code)
      example: 30%
    PDCode:
      type: string
      description: Probability Default (Code)
      example: AF6
    statusCode:
      type: string
      description: Status of the object (Code)
      example: OPN
    actionCode:
      type: string
      description: State transition identifier
      example: NPW
    reasonCode:
      type: string
      description: Reason for state change
      example: "01"
    statusDate:
      type: string
      description: Deal Status Date (generated by DPX)
      format: date-time
      example: 2017-07-21T17:32:28Z
    syndicated:
      type: boolean
      description: Flag/checkbox to indicate Syndication Deal, financing offered by
        group of lenders
      example: true
    sensitivityCode:
      type: string
      description: Non-NDA or NDA
      example: Non-NDA
      enum:
      - Non-NDA
      - NDA
    isSecure:
      type: boolean
      description: Flag/checkbox to indicate Secured deal
      example: true
    regionCode:
      type: string
      description: Region of the relationship/Deal (Code)
      example: EU
    countryCode:
      type: string
      description: Location where deal is being booked (Code)
      example: UK
    zipCode:
      type: string
      description: Zip code information
      example: 1234 AB
    RMId:
      type: string
      description: Unique Id of RM
      example: 1233445-3333
    outerRMId:
      type: string
      description: Unique Id for RM provided by the Bank (for integration)
      example: John@bank.com
    RMName:
      type: string
      description: RM with point of control Deal
      example: John Doe
    RMemail:
      type: string
      description: Unique email Id of RM
      example: John@bank.com
    creditRatingTypeCode:
      type: string
      description: Credit Rating Type (external or internal to Bank), Code
      example: INT
    creditRatingCode:
      type: string
      description: Risk grade (combination of PD and LGD), Code
      example: R11
    divisionCode:
      type: string
      description: Division of bank
      example: WHS
    businessSegmentCode:
      type: string
      description: Segment of Business line (Code)
      example: Dept. A
    businessUnitCode:
      type: string
      description: Business Unit of RM (Code)
      example: LPG
    capitalClassCode:
      type: string
      description: Capital Classification (Code)
      example: CC-1
    industryCategoryCode:
      type: string
      description: Primary Industry of Deal (Code)
      example: "123"
    industryCode:
      type: string
      description: Industry (Code)
      example: "321"
    pricingEventTypeCode:
      type: string
      description: Pricing event type - New, Existing (Imported), Refinance and Repricing
      example: Existing (Imported)
      enum:
      - New
      - Existing (Imported)
      - Refinance
      - Repricing
    pricingEventCode:
      type: string
      description: Pricing event type - New, Existing (Imported), Refinance and Repricing
      example: New
    notes:
      type: string
      description: Free-text with ability to include rich text and attach images/documents
      example: Any text
    hurdle:
      type: number
      description: Deal Hurdle for RARoC or RoE or revenue or NIM
      example: 0.22
    target:
      type: number
      description: Deal Target for RARoC or RoE or revenue or NIM
      example: 0.234
    clientAttribute...:
      type: string
      description: Client specific attributes.
      example: Client defined value...
    userName:
      type: string
      description: User name (used for logon)
      example: Ron@ClientA.com
    fullName:
      type: string
      description: Full userName
      example: Ron Bakerson
    email:
      type: string
      description: email adress
      example: a@b.com
    phoneNumber:
      type: string
      description: Phone number of entity
      example: +31623123435
    disabled:
      type: boolean
      description: Flag/checkbox to indicate disabled user
      example: true
    term:
      type: number
      description: Tenor of product
      example: 12
    startDate:
      type: string
      description: current or future start date of product
      format: date
      example: 2021-11-04
    maturityDate:
      type: string
      description: Maturity date of product i.e. startDate+term
      format: date
      example: 2027-11-04
    limit:
      type: number
      description: Product limit
      example: 10000000
    drawnAmount:
      type: number
      description: Drawn portion of product limit
      example: 8000000
    utilisationRate:
      type: number
      description: expected average utilization, % of limit
      example: 0.8
    coffRate:
      type: number
      description: Different cost factors sumed up together for product variant
      example: 123321
    promotionCode:
      type: string
      description: Promotion Code
      example: Disc-1
    promotionAmount:
      type: string
      description: Promotion Amount
      example: "334455"
    discount:
      type: string
      description: discount applies to Credit product and Benefit applies to deposit
        product. The value could be (rate or dollar)
      example: 15%
    depositAnticipatedBalance:
      type: number
      description: Balance
      example: 1200000
    avgBalance:
      type: number
      description: Average Balance over period of time
      example: 8000000
    depositClientRate:
      type: number
      description: Client Rate for deposit product
      example: 0.02
    maturityInstructions:
      type: string
      description: Applies to deposit product where instructions to follow on maturity
      example: Please send by wire
    gracePeriod:
      type: string
      description: Applies to deposit product to change Maturity Instructions on Maturity
        of deposit
      example: 2 months
    discountTypeCode:
      type: string
      description: discount Type - Package like farmers choice
      example: FRM
    RWAApproachCode:
      type: string
      description: RWA like Advanced IRB, Standardized and Foundation IRB
      example: FGT
    productVariantCode:
      type: string
      description: Specific product under a product category (ie term loan)
      example: termLOAN
    productCategoryCode:
      type: string
      description: Category of products with similar purpose
      example: DEPOST
    productClassCode:
      type: string
      description: Broad class of products with similar purpose (Lending, Deposit,
        Services)
      example: SERVICES
    revenue:
      type: number
      description: Total revenue Generated by product (Gross Interest plus fees)
      example: 2342321.12
    margin:
      type: number
      description: margin
      example: 2342321.12
    netInterestIncome:
      type: number
      description: Total interest paid by client less Funding Costs
      example: 2342321.12
    feeIncome:
      type: number
      description: Total revenue Generated by product fees
      example: 2342321.12
    grossProfit:
      type: number
      description: Gross profit achieved by the lender for the product (Net Interest
        Income + Fee Income).
      example: 2342321.12
    fundingCosts:
      type: number
      description: Extendable series of any/ all lender funding costs ( treasury,
        product, liquidity,premiums, COF and adjustments)
      example: 2342321.12
    operatingCosts:
      type: number
      description: Extendable series of operating costs incurred in delivering a product
        (upfront / ongoing / broker costs).
      example: 2342321.12
    otherCosts:
      type: number
      description: Other Costs
      example: 2342321.12
    otherGain:
      type: number
      description: Extendable series of other gains expected by the lender. Configurable
        to the lender.
      example: 2342321.12
    otherLoss:
      type: number
      description: Extendable series of other losses expected by the lender. Configurable
        to the lender.
      example: 2342321.12
    NPBT:
      type: number
      description: Net Profit Before Tax (Gross Profit + Other Gain - Other Loss -
        Costs)
      example: 2342321.12
    tax:
      type: number
      description: Income tax amount payable by the lender on NPBT.
      example: 2342321.12
    taxRate:
      type: number
      description: tax Rate of BookingLocation
      example: 2342321.12
    frankingCredit:
      type: number
      description: Tax credit paid by corporations to their shareholders along with
        their dividend payments
      example: 2342321.12
    NPAT:
      type: number
      description: Net Profit After Tax (NPBT – Tax + Franking Credit)
      example: 2342321.12
    RoE:
      type: number
      description: Return on Equity annualised
      example: 2342321.12
    NIM:
      type: number
      description: Net Interest margin (NIM) amount of money that a bank is earning
        in interest - amount it is paying in interest
      example: 2342321.12
    riskWeightedAssets:
      type: number
      description: Risk Weighted Asset (RWA) based on the amount of capital required
        to reduce the risk of insolvency
      example: 2342321.12
    riskRate:
      type: number
      description: Extendable series of Risk Rates Configurable to the lender (credit
        risk rate, etc).
      example: 2342321.12
    regulatoryCapital:
      type: number
      description: Regulatory Capital (APRA mandates 8% of RWA for Aus Banks. Amount
        may vary by region).
      example: 2342321.12
    costOfCapital:
      type: number
      description: Opportunity cost of making a specific investment
      example: 2342321.12
    capitalCharge:
      type: number
      description: Capital Charge
      example: 2342321.12
    SVA-PACC-EP:
      type: number
      description: Profit after Capital Charge (PACC) - key measure of risk adjusted
        profitability (with consideration to risk and capital utilisation)
      example: 2342321.12
    RARoC:
      type: number
      description: Risk Adjusted Return on Capital annualised
      example: 2342321.12
    RoRC:
      type: number
      description: Return on Risk Capital
      example: 2342321.12
    regulatoryExpectedLoss:
      type: number
      description: Any potential loss from credit risk
      example: 2342321.12
    capitalBenefit:
      type: number
      description: Any income benefit derived from return on Regulatory Capital
      example: 2342321.12
    exposureatDefault:
      type: number
      description: exposure at default (EAD)- predicted amount of loss in the event
        of a default
      example: 2342321.12
    dateCreated:
      type: string
      description: Date the enity was created.
      format: date-time
      example: 2020-06-18T17:32:28Z
    createdBy:
      type: string
      description: The entity was created by.
      example: Ron
    lastUpdated:
      type: string
      description: Date the enity was last updated.
      format: date-time
      example: 2020-06-21T01:32:28Z
    updatedBy:
      type: string
      description: The entity was last updated by.
      example: Mary
    dateLastPriced:
      type: string
      description: Date the price of enity was last updated.
      format: date-time
      example: 2020-06-21T01:31:40Z
    dateSubmitted:
      type: string
      description: Date the enity was submitted.
      format: date-time
      example: 2020-06-21T01:31:40Z
    lastPricedBy:
      type: string
      description: The price of the entity was last updated by.
      example: Daily price updater
    codedType:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/code'
        name:
          $ref: '#/components/schemas/name'
    technicalFieldsType:
      type: object
      properties:
        dateCreated:
          $ref: '#/components/schemas/dateCreated'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        lastUpdated:
          $ref: '#/components/schemas/lastUpdated'
        updatedBy:
          $ref: '#/components/schemas/updatedBy'
        dateLastPriced:
          $ref: '#/components/schemas/dateLastPriced'
        lastPricedBy:
          $ref: '#/components/schemas/lastPricedBy'
    clientAttributeCoded:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/codedType'
      description: Client specific attribute (Code).
    revenueType:
      type: object
      properties:
        revenue:
          $ref: '#/components/schemas/revenue'
        crossSellRevenue:
          $ref: '#/components/schemas/revenue'
        futureCrossSellRevenue:
          $ref: '#/components/schemas/revenue'
        margin:
          $ref: '#/components/schemas/margin'
        netInterestIncome:
          $ref: '#/components/schemas/netInterestIncome'
        feeIncome:
          $ref: '#/components/schemas/feeIncome'
        grossProfit:
          $ref: '#/components/schemas/grossProfit'
        fundingCosts:
          $ref: '#/components/schemas/fundingCosts'
        operatingCosts:
          $ref: '#/components/schemas/operatingCosts'
        otherCosts:
          $ref: '#/components/schemas/otherCosts'
        otherGain:
          $ref: '#/components/schemas/otherGain'
        otherLoss:
          $ref: '#/components/schemas/otherLoss'
        NPBT:
          $ref: '#/components/schemas/NPBT'
        tax:
          $ref: '#/components/schemas/tax'
        taxRate:
          $ref: '#/components/schemas/taxRate'
        frankingCredit:
          $ref: '#/components/schemas/frankingCredit'
        NPAT:
          $ref: '#/components/schemas/NPAT'
        RoE:
          $ref: '#/components/schemas/RoE'
        NIM:
          $ref: '#/components/schemas/NIM'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
    regulatoryCapitalType:
      type: object
      properties:
        riskWeightedAssets:
          $ref: '#/components/schemas/riskWeightedAssets'
        riskRate:
          $ref: '#/components/schemas/riskRate'
        regulatoryCapital:
          $ref: '#/components/schemas/regulatoryCapital'
        costOfCapital:
          $ref: '#/components/schemas/costOfCapital'
        capitalCharge:
          $ref: '#/components/schemas/capitalCharge'
        SVA-PACC-EP:
          $ref: '#/components/schemas/SVA-PACC-EP'
        RARoC:
          $ref: '#/components/schemas/RARoC'
        RoRC:
          $ref: '#/components/schemas/RoRC'
        regulatoryExpectedLoss:
          $ref: '#/components/schemas/regulatoryExpectedLoss'
        capitalBenefit:
          $ref: '#/components/schemas/capitalBenefit'
        exposureatDefault:
          $ref: '#/components/schemas/exposureatDefault'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
    portfolioListType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
    portfolioListUpdateType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
    relationshipListType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerCustomerId:
          $ref: '#/components/schemas/outerCustomerId'
        name:
          $ref: '#/components/schemas/name'
        clientType:
          $ref: '#/components/schemas/codedType'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        portfolio:
          $ref: '#/components/schemas/portfolioListType'
    relationshipListUpdateType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
    relationshipType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerCustomerId:
          $ref: '#/components/schemas/outerCustomerId'
        name:
          $ref: '#/components/schemas/name'
        countryCode:
          $ref: '#/components/schemas/countryCode'
        creditRatingType:
          $ref: '#/components/schemas/creditRatingTypeCode'
        creditRatingCode:
          $ref: '#/components/schemas/creditRatingCode'
        description:
          $ref: '#/components/schemas/description'
        capitalClass:
          $ref: '#/components/schemas/capitalClassCode'
        industryCategoryCode:
          $ref: '#/components/schemas/industryCategoryCode'
        industryCode:
          $ref: '#/components/schemas/industryCode'
        status:
          $ref: '#/components/schemas/statusCode'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        portfolio:
          $ref: '#/components/schemas/portfolioListUpdateType'
    relationshipDetailsType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerCustomerId:
          $ref: '#/components/schemas/outerCustomerId'
        name:
          $ref: '#/components/schemas/name'
        countryCode:
          $ref: '#/components/schemas/codedType'
        creditRatingType:
          $ref: '#/components/schemas/codedType'
        creditRatingCode:
          $ref: '#/components/schemas/codedType'
        description:
          $ref: '#/components/schemas/description'
        capitalClass:
          $ref: '#/components/schemas/codedType'
        industryCategory:
          $ref: '#/components/schemas/codedType'
        industryCode:
          $ref: '#/components/schemas/codedType'
        status:
          $ref: '#/components/schemas/codedType'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        portfolio:
          $ref: '#/components/schemas/portfolioListType'
        technicalFields:
          $ref: '#/components/schemas/technicalFieldsType'
    relationshipProfitabilityType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        revenue:
          $ref: '#/components/schemas/revenueType'
        regulatoryCapital:
          $ref: '#/components/schemas/regulatoryCapitalType'
        technicalFields:
          $ref: '#/components/schemas/technicalFieldsType'
    dealListType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerDealId:
          $ref: '#/components/schemas/outerDealId'
        name:
          $ref: '#/components/schemas/name'
        status:
          $ref: '#/components/schemas/codedType'
        statusDate:
          $ref: '#/components/schemas/statusDate'
        isSecure:
          $ref: '#/components/schemas/isSecure'
        bookingRegion:
          $ref: '#/components/schemas/codedType'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        relationship:
          $ref: '#/components/schemas/relationshipListType'
    dealListUpdateType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
    dealDetailsType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerDealId:
          $ref: '#/components/schemas/outerDealId'
        name:
          $ref: '#/components/schemas/name'
        status:
          $ref: '#/components/schemas/codedType'
        statusDate:
          $ref: '#/components/schemas/statusDate'
        syndicated:
          $ref: '#/components/schemas/syndicated'
        sensitivity:
          $ref: '#/components/schemas/codedType'
        isSecure:
          $ref: '#/components/schemas/isSecure'
        bookingRegion:
          $ref: '#/components/schemas/codedType'
        notes:
          $ref: '#/components/schemas/notes'
        hurdle:
          $ref: '#/components/schemas/hurdle'
        target:
          $ref: '#/components/schemas/target'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        clientAttributeCoded...:
          $ref: '#/components/schemas/clientAttributeCoded'
        relationship:
          $ref: '#/components/schemas/relationshipListType'
        technicalFields:
          $ref: '#/components/schemas/technicalFieldsType'
    dealType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerDealId:
          $ref: '#/components/schemas/outerDealId'
        name:
          $ref: '#/components/schemas/name'
        status:
          $ref: '#/components/schemas/statusCode'
        statusDate:
          $ref: '#/components/schemas/statusDate'
        syndicated:
          $ref: '#/components/schemas/syndicated'
        sensitivity:
          $ref: '#/components/schemas/sensitivityCode'
        isSecure:
          $ref: '#/components/schemas/isSecure'
        bookingRegion:
          $ref: '#/components/schemas/regionCode'
        countryCode:
          $ref: '#/components/schemas/countryCode'
        bookingStateLocationCode:
          $ref: '#/components/schemas/bookingStateLocationCode'
        notes:
          $ref: '#/components/schemas/notes'
        hurdle:
          $ref: '#/components/schemas/hurdle'
        target:
          $ref: '#/components/schemas/target'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        relationship:
          $ref: '#/components/schemas/relationshipListUpdateType'
    dealProfitabilityType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        revenue:
          $ref: '#/components/schemas/revenueType'
        regulatoryCapital:
          $ref: '#/components/schemas/regulatoryCapitalType'
        technicalFields:
          $ref: '#/components/schemas/technicalFieldsType'
    dealWorkflowType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        parentId:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        status:
          $ref: '#/components/schemas/codedType'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
    approver-type:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        userName:
          $ref: '#/components/schemas/userName'
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          $ref: '#/components/schemas/email'
        status:
          $ref: '#/components/schemas/codedType'
        approvedDate:
          $ref: '#/components/schemas/lastUpdated'
        actionHistoryId:
          $ref: '#/components/schemas/id'
    approvalGroupType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        status:
          $ref: '#/components/schemas/codedType'
        actionsAllowed:
          type: array
          items:
            $ref: '#/components/schemas/codedType'
        approvedDate:
          $ref: '#/components/schemas/lastUpdated'
        approvers:
          type: array
          description: Contains a list of approvers. If the approvel is in state Draft,
            this list is empty and the potential approvers may be usiung the /deal/{id}/approval/approval-group/{id}/approvers
            resource.
          items:
            $ref: '#/components/schemas/approver-type'
    approvalLevelType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        parentId:
          $ref: '#/components/schemas/id'
        name:
          $ref: '#/components/schemas/name'
        status:
          $ref: '#/components/schemas/codedType'
        actionsAllowed:
          type: array
          items:
            $ref: '#/components/schemas/codedType'
        approvalGroups:
          type: array
          items:
            $ref: '#/components/schemas/approvalGroupType'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
    approvalGroupSetupType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        approvers:
          type: array
          description: Contains a list of approvers.
          items:
            $ref: '#/components/schemas/id'
    approvalSetupType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        approvalGroups:
          type: array
          items:
            $ref: '#/components/schemas/approvalGroupSetupType'
    dealActionType:
      type: object
      properties:
        actionId:
          $ref: '#/components/schemas/actionCode'
        reasonCode:
          $ref: '#/components/schemas/reasonCode'
        comment:
          $ref: '#/components/schemas/comment'
    approvalLevelActionType:
      type: object
      properties:
        actionId:
          $ref: '#/components/schemas/actionCode'
        reason-code:
          $ref: '#/components/schemas/reasonCode'
        comment:
          $ref: '#/components/schemas/comment'
    scenarioListType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerScenarioId:
          $ref: '#/components/schemas/outerScenarioId'
        name:
          $ref: '#/components/schemas/name'
        status:
          $ref: '#/components/schemas/codedType'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        deal:
          $ref: '#/components/schemas/dealListType'
    scenarioListUpdateType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
    scenarioDetailsType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerScenarioId:
          $ref: '#/components/schemas/outerScenarioId'
        name:
          $ref: '#/components/schemas/name'
        status:
          $ref: '#/components/schemas/codedType'
        statusDate:
          $ref: '#/components/schemas/statusDate'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        deal:
          $ref: '#/components/schemas/dealListType'
        technicalFields:
          $ref: '#/components/schemas/technicalFieldsType'
    scenarioType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerScenarioId:
          $ref: '#/components/schemas/outerScenarioId'
        name:
          $ref: '#/components/schemas/name'
        status:
          $ref: '#/components/schemas/statusCode'
        statusDate:
          $ref: '#/components/schemas/statusDate'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        deal:
          $ref: '#/components/schemas/dealListUpdateType'
    scenarioProfitabilityType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        revenue:
          $ref: '#/components/schemas/revenueType'
        regulatoryCapital:
          $ref: '#/components/schemas/regulatoryCapitalType'
        technicalFields:
          $ref: '#/components/schemas/technicalFieldsType'
    counterpartyListType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerCustomerId:
          $ref: '#/components/schemas/outerCustomerId'
        name:
          $ref: '#/components/schemas/name'
        clientType:
          $ref: '#/components/schemas/codedType'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        deal:
          $ref: '#/components/schemas/dealListType'
        scenario:
          $ref: '#/components/schemas/scenarioListType'
    counterpartyListUpdateType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
    counterpartyType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerCustomerId:
          $ref: '#/components/schemas/outerCustomerId'
        name:
          $ref: '#/components/schemas/name'
        countryCode:
          $ref: '#/components/schemas/countryCode'
        creditRatingType:
          $ref: '#/components/schemas/creditRatingTypeCode'
        creditRatingCode:
          $ref: '#/components/schemas/creditRatingCode'
        description:
          $ref: '#/components/schemas/description'
        capitalClass:
          $ref: '#/components/schemas/capitalClassCode'
        industryCategory:
          $ref: '#/components/schemas/industryCategoryCode'
        industryCode:
          $ref: '#/components/schemas/industryCode'
        status:
          $ref: '#/components/schemas/statusCode'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        deal:
          $ref: '#/components/schemas/dealListUpdateType'
        scenario:
          $ref: '#/components/schemas/scenarioListUpdateType'
    counterpartyDetailsType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerCustomerId:
          $ref: '#/components/schemas/outerCustomerId'
        name:
          $ref: '#/components/schemas/name'
        countryCode:
          $ref: '#/components/schemas/codedType'
        creditRatingType:
          $ref: '#/components/schemas/codedType'
        creditRatingCode:
          $ref: '#/components/schemas/codedType'
        description:
          $ref: '#/components/schemas/description'
        capitalClass:
          $ref: '#/components/schemas/codedType'
        industryCategory:
          $ref: '#/components/schemas/codedType'
        industryCode:
          $ref: '#/components/schemas/codedType'
        status:
          $ref: '#/components/schemas/codedType'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        deal:
          $ref: '#/components/schemas/dealListType'
        scenario:
          $ref: '#/components/schemas/scenarioListType'
        technicalFields:
          $ref: '#/components/schemas/technicalFieldsType'
    counterpartyProfitabilityType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        revenue:
          $ref: '#/components/schemas/revenueType'
        regulatoryCapital:
          $ref: '#/components/schemas/regulatoryCapitalType'
        technicalFields:
          $ref: '#/components/schemas/technicalFieldsType'
    productListType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerProductId:
          $ref: '#/components/schemas/outerProductId'
        name:
          $ref: '#/components/schemas/name'
        productClass:
          $ref: '#/components/schemas/codedType'
        productCategory:
          $ref: '#/components/schemas/codedType'
        productVariant:
          $ref: '#/components/schemas/codedType'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        deal:
          $ref: '#/components/schemas/dealListType'
        scenario:
          $ref: '#/components/schemas/scenarioListType'
        counterparty:
          $ref: '#/components/schemas/counterpartyListType'
    productListUpdateType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
    productType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerProductId:
          $ref: '#/components/schemas/outerProductId'
        name:
          $ref: '#/components/schemas/name'
        productClass:
          $ref: '#/components/schemas/productClassCode'
        productCategory:
          $ref: '#/components/schemas/productCategoryCode'
        productVariant:
          $ref: '#/components/schemas/productVariantCode'
        hurdle:
          $ref: '#/components/schemas/hurdle'
        target:
          $ref: '#/components/schemas/target'
        term:
          $ref: '#/components/schemas/term'
        startDate:
          $ref: '#/components/schemas/startDate'
        coffRate:
          $ref: '#/components/schemas/coffRate'
        currencyCode:
          $ref: '#/components/schemas/currencyCode'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        deal:
          $ref: '#/components/schemas/dealListUpdateType'
        scenario:
          $ref: '#/components/schemas/scenarioListUpdateType'
        counterparty:
          $ref: '#/components/schemas/counterpartyListUpdateType'
    productDetailsType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        outerProductId:
          $ref: '#/components/schemas/outerProductId'
        name:
          $ref: '#/components/schemas/name'
        productClass:
          $ref: '#/components/schemas/codedType'
        productCategory:
          $ref: '#/components/schemas/codedType'
        productVariant:
          $ref: '#/components/schemas/codedType'
        hurdle:
          $ref: '#/components/schemas/hurdle'
        target:
          $ref: '#/components/schemas/target'
        term:
          $ref: '#/components/schemas/term'
        startDate:
          $ref: '#/components/schemas/startDate'
        coffRate:
          $ref: '#/components/schemas/coffRate'
        currencyCode:
          $ref: '#/components/schemas/codedType'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
        deal:
          $ref: '#/components/schemas/dealListType'
        scenario:
          $ref: '#/components/schemas/scenarioListType'
        counterparty:
          $ref: '#/components/schemas/counterpartyListType'
        technicalFields:
          $ref: '#/components/schemas/technicalFieldsType'
    productProfitabilityType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        revenue:
          $ref: '#/components/schemas/revenueType'
        regulatoryCapital:
          $ref: '#/components/schemas/regulatoryCapitalType'
        technicalFields:
          $ref: '#/components/schemas/technicalFieldsType'
    userContextType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        userName:
          $ref: '#/components/schemas/userName'
        disabled:
          $ref: '#/components/schemas/disabled'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
    userListType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        userName:
          $ref: '#/components/schemas/userName'
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          $ref: '#/components/schemas/email'
        phoneNumber:
          $ref: '#/components/schemas/phoneNumber'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
    userType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        userName:
          $ref: '#/components/schemas/userName'
        fullName:
          $ref: '#/components/schemas/fullName'
        email:
          $ref: '#/components/schemas/email'
        phoneNumber:
          $ref: '#/components/schemas/phoneNumber'
        disabled:
          $ref: '#/components/schemas/disabled'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
    userApprovalListType:
      type: object
      properties:
        approvalGroupId:
          $ref: '#/components/schemas/id'
        submittedBy:
          $ref: '#/components/schemas/name'
        submittedAt:
          $ref: '#/components/schemas/dateSubmitted'
        status:
          $ref: '#/components/schemas/codedType'
        deal:
          $ref: '#/components/schemas/dealListType'
    approval-user-action-type:
      type: object
      properties:
        approvalGroupId:
          $ref: '#/components/schemas/id'
        action-id:
          $ref: '#/components/schemas/actionCode'
        reason-code:
          $ref: '#/components/schemas/reasonCode'
        comment:
          $ref: '#/components/schemas/comment'
    relationshipList:
      type: object
      properties:
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/relationshipListType'
    relationshipDetails:
      type: object
      properties:
        relationship:
          $ref: '#/components/schemas/relationshipDetailsType'
    relationship:
      type: object
      properties:
        relationship:
          $ref: '#/components/schemas/relationshipType'
    relationshipProfitability:
      type: object
      properties:
        relationshipProfitability:
          $ref: '#/components/schemas/relationshipProfitabilityType'
    dealList:
      type: object
      properties:
        deals:
          type: array
          items:
            $ref: '#/components/schemas/dealListType'
    deal:
      type: object
      properties:
        deal:
          $ref: '#/components/schemas/dealType'
    dealDetails:
      type: object
      properties:
        deal:
          $ref: '#/components/schemas/dealDetailsType'
    dealProfitability:
      type: object
      properties:
        dealProfitability:
          $ref: '#/components/schemas/dealProfitabilityType'
        technicalFields:
          $ref: '#/components/schemas/technicalFieldsType'
    dealWorkflow:
      type: object
      properties:
        dealWorkflow:
          type: array
          items:
            $ref: '#/components/schemas/dealWorkflowType'
    approvalDetails:
      type: object
      properties:
        approvalLevel:
          type: array
          items:
            $ref: '#/components/schemas/approvalLevelType'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
    approversList:
      type: object
      properties:
        approvers:
          type: array
          items:
            $ref: '#/components/schemas/userType'
        clientAttribute...:
          $ref: '#/components/schemas/clientAttribute...'
    approvalSetup:
      type: object
      properties:
        approvalLevel:
          type: array
          items:
            $ref: '#/components/schemas/approvalSetupType'
        comment:
          $ref: '#/components/schemas/comment'
    dealAction:
      type: object
      properties:
        dealAction:
          $ref: '#/components/schemas/dealActionType'
    approvalLevelAction:
      type: object
      properties:
        approvalLevelAction:
          $ref: '#/components/schemas/approvalLevelActionType'
    scenarioList:
      type: object
      properties:
        scenarios:
          type: array
          items:
            $ref: '#/components/schemas/scenarioListType'
    scenario:
      type: object
      properties:
        scenario:
          $ref: '#/components/schemas/scenarioType'
    scenarioDetails:
      type: object
      properties:
        scenario:
          $ref: '#/components/schemas/scenarioDetailsType'
    scenarioProfitability:
      type: object
      properties:
        scenarioProfitability:
          $ref: '#/components/schemas/scenarioProfitabilityType'
    counterpartyList:
      type: object
      properties:
        counterparties:
          type: array
          items:
            $ref: '#/components/schemas/counterpartyListType'
    counterparty:
      type: object
      properties:
        counterparty:
          $ref: '#/components/schemas/counterpartyType'
    counterpartyDetails:
      type: object
      properties:
        counterparty:
          $ref: '#/components/schemas/counterpartyDetailsType'
    counterpartyProfitability:
      type: object
      properties:
        counterpartyProfitability:
          $ref: '#/components/schemas/counterpartyProfitabilityType'
    productList:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/productListType'
    product:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/productType'
    productDetails:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/productDetailsType'
    productProfitability:
      type: object
      properties:
        productProfitability:
          $ref: '#/components/schemas/productProfitabilityType'
    userContext:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/userContextType'
    userList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/userListType'
    user:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/userType'
    userApprovalList:
      type: object
      properties:
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/userApprovalListType'
    approvalUserAction:
      type: object
      properties:
        approvalLevelAction:
          $ref: '#/components/schemas/approval-user-action-type'
    errorResponse:
      type: object
      properties:
        errorCode:
          type: string
          description: error code
          example: WSM002
        errorType:
          type: string
          description: type of the issue
          example: ConnectException
        errorMessage:
          type: string
          description: message
          example: Connection refused
        errorData:
          type: string
          description: additional information
          example: Call to system Y timeout [> 30 secs].
  securitySchemes:
    BasicAuth:
      type: http
      description: Basic Authentication with user and password
      scheme: basic
    ApiKeyAuth:
      type: apiKey
      name: X-API-Key
      in: header
